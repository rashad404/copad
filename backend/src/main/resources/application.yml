spring:
  mvc:
    throw-exception-if-no-handler-found: true  # Needed to catch 404s manually
    web:
      resources:
        add-mappings: false # Needed if you want custom handling for static resources too
  devtools:
    restart:
      enabled: true
      quiet-period: 2000
      poll-interval: 3000
    livereload:
      enabled: true
  profiles:
    active: local  # change to 'prod' when deploying to production
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: openid,profile,email
            redirect-uri: https://virtualhekim.az/api/login/oauth2/code/google
          facebook:
            client-id: ${FACEBOOK_CLIENT_ID}
            client-secret: ${FACEBOOK_CLIENT_SECRET}
            scope: public_profile,email
            redirect-uri: https://virtualhekim.az/api/login/oauth2/code/facebook

  datasource:
    url: ${DATABASE_URL}?useUnicode=true&characterEncoding=UTF-8&characterSetResults=UTF-8
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    database-platform: org.hibernate.dialect.MySQLDialect
    properties:
      hibernate:
        connection:
          characterEncoding: UTF-8
          useUnicode: true
          charSet: UTF-8

server:
  port: ${PORT:8080}
  forward-headers-strategy: framework
  tomcat:
    remoteip:
      protocol-header: X-Forwarded-Proto
      remote-ip-header: X-Forwarded-For
      internal-proxies: .*
  use-forward-headers: true
  error:
    path: /custom-error   # Default is /error
    whitelabel:
      enabled: true # If true, uses default Spring Boot error page

app:
  chatgpt:
    use-dummy-data: false
    openai:
      key: ${OPENAI_API_KEY}
      # model: gpt-3.5-turbo
      model: gpt-4o-mini
      url: https://api.openai.com/v1/chat/completions

logging:
  level:
    org.springframework.security: DEBUG
